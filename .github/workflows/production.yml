name: Vercel Production Deploy

on:
  push:
    branches:
      - main

env:
  CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/.cypress
  PERCY_POSTINSTALL_BROWSER: true
  PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Set Node.js Version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install Application Dependencies
        run: |
          yarn install --frozen-lockfile --prefer-offline
          yarn cypress version
          yarn cypress cache path
          yarn cypress cache list

      - name: Formatting
        run: yarn run lint:format

      - name: Lint Scripts
        run: yarn run lint:js

      - name: Lint Styles
        run: yarn run lint:css

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy-artifacts
        run: |
          echo "DEPLOY_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT

      - name: Create Deployment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { data: deployment } = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: '${{ github.ref_name }}',
              environment: 'Production',
              required_contexts: [],
              auto_merge: false,
            });

            return await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              state: 'success',
              environment_url: '${{ steps.deploy-artifacts.outputs.DEPLOY_URL }}',
            });

      - name: Run Cypress End-To-End Tests
        run: yarn run test:e2e:headless

      - name: Store End-To-End Test Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: end-to-end-test-artifacts
          retention-days: 5
          path: |
            cypress/screenshots/
            cypress/videos/
